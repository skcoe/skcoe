<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"> 

	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		 <property name="url" value="jdbc:oracle:thin:@172.16.249.36:1536:sffpvtdb" />
		 <property name="username" value="montrib" />
		<property name="password" value="montrib" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="10" />
	</bean>
		
	<!-- 	
		
	<bean id="dataSource2"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	 <property name="url" value="jdbc:oracle:thin:@172.16.249.36:1537:INVPVTDB" />
		<property name="username" value="montrib" />
		<property name="password" value="montrib" />
		<property name="initialSize" value="3" />
		<property name="maxActive" value="10" />
		
	</bean>
	
 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>  
	<!-- 
	<bean id="transactionManager2"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="invSessionFactory"/>
		</property>
	</bean> 
	 -->
	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<!-- ==================== AM HBM Config ==================== -->
				<value>th/co/ais/sff/domain/am/AccountLight.hbm.xml</value>
				<value>th/co/ais/sff/domain/am/SffProfileChange.hbm.xml</value>
				
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
<!-- ==================== GM ANNOTATED CLASSES ==================== -->
				<value>th.co.ais.sff.domain.gm.SffUser</value>
				<value>th.co.ais.sff.domain.gm.SffPartnerDivisionPosition</value>
		       	
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.jdbc.batch_size">500</prop>
			 	<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	

	
	<!-- ========================= OM DAO DEFINITIONS ========================= -->
	 
	 
	<bean id="sffAssetAccountPromotionDao" class="th.co.ais.sff.dao.hibernate.om.HibernateSffAssetAccountPromotionDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="sffDefaultOrderFeeDao" class="th.co.ais.sff.dao.hibernate.om.HibernateSffDefaultOrderFeeDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
		
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="create*" propagation="REQUIRED"/>			
			<tx:method name="add*" propagation="REQUIRED"/>		
			<tx:method name="change*" propagation="REQUIRED"/>
			<tx:method name="send*" propagation="REQUIRED"/>
			<tx:method name="cancel*" propagation="REQUIRED"/>
			<!--<tx:method name="validate*" propagation="REQUIRED"/>
			--><tx:method name="get*" propagation="REQUIRED"/>
			<tx:method name="submit*" propagation="REQUIRED"/>
			<!--<tx:method name="updateOrderSubmission*" propagation="REQUIRES_NEW" />
			<tx:method name="updateOrderCompleteServiceInstance*" propagation="REQUIRES_NEW" />
-->
			<tx:method name="doCreateNew*" propagation="REQUIRES_NEW" rollback-for="th.co.ais.sff.exception.SffBusinessException"/>
			<tx:method name="doCancel*" propagation="REQUIRES_NEW" rollback-for="th.co.ais.sff.exception.SffBusinessException"/>
			<tx:method name="product*" propagation="REQUIRED" rollback-for="th.co.ais.sff.exception.SffBusinessException"/>			
			<tx:method name="*" propagation="REQUIRED"  />
		</tx:attributes>
	</tx:advice>
	
	
	<tx:advice id="txAdviceTra" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="validate*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>	

		
	<aop:config>
		<!--
			This definition creates auto-proxy infrastructure based on the given pointcut,
			expressed in AspectJ pointcut language. Here: applying the advice named
			"txAdvice" to all methods on classes named PetStoreImpl.
		-->
		<aop:advisor pointcut="execution(* th.co.ais.sff.service.impl..*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* th.co.ais.sff.service.validate.om..*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* th.co.ais.sff.service.validate.om.tx..*(..))" advice-ref="txAdviceTra"/>
		
		
		<!--
			This definition creates auto-proxy infrastructure based on the given pointcut,
			expressed in AspectJ pointcut language. Here: applying the advice named
			"emailAdvice" to insertOrder(Order) method of PetStoreImpl
		-->
	</aop:config>

</beans>